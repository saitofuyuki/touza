# Makefile.in generated by automake 1.16.5 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# touza/calendar Makefile.am
# Maintainer:  SAITO Fuyuki
# Created: May 27 2020
# Time-stamp: <2022/10/20 10:41:22 fuyuki Makefile.am>

# Copyright (C) 2020, 2021
#           Japan Agency for Marine-Earth Science and Technology
# Licensed under the Apache License, Version 2.0
#   (https://www.apache.org/licenses/LICENSE-2.0)

# aminclude_static.am generated automatically by Autoconf
# from AX_AM_MACROS_STATIC on Fri Mar 24 16:09:38 JST 2023




VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
@CLEAN_FCMOD_TRUE@am__append_1 = *.$(FC_MODEXT) $(LIST_MODFILES)
# AM_FCFLAGS_DEP = -MD -MP -MF $*.dep
@gcc_dependencies_TRUE@am__append_2 = $(AM_FCFLAGS_DEP)
@gcc_dependencies_TRUE@am__append_3 = *.dep
@MAINTAINER_MODE_TRUE@am__append_4 = $(TESTS_miroc)
check_PROGRAMS = test_calendar$(EXEEXT) test_calendar_core$(EXEEXT) \
	test_calendar_comp$(EXEEXT) $(am__EXEEXT_1) \
	test_calendar_matsiro$(EXEEXT) test_calendar_ils$(EXEEXT) \
	test_calendar_coco$(EXEEXT)
@MAINTAINER_MODE_TRUE@am__append_5 = test_calendar_trad
subdir = cal
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/mt_local.m4 \
	$(top_srcdir)/std/mt_local.m4 $(top_srcdir)/emu/mt_local.m4 \
	$(top_srcdir)/cal/mt_local.m4 $(top_srcdir)/trp/mt_local.m4 \
	$(top_srcdir)/ppp/mt_local.m4 $(top_srcdir)/nio/mt_local.m4 \
	$(top_srcdir)/ami/mt_local.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(include_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/touza_config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
@MAINTAINER_MODE_TRUE@am__EXEEXT_1 = test_calendar_trad$(EXEEXT)
LTLIBRARIES = $(noinst_LTLIBRARIES)
libtouza_local_la_LIBADD =
am__objects_1 =
am__objects_2 = calendar_primitive.lo calendar_core.lo calendar.lo \
	$(am__objects_1)
am_libtouza_local_la_OBJECTS = $(am__objects_2) calendar_matsiro.lo \
	calendar_ils.lo
libtouza_local_la_OBJECTS = $(am_libtouza_local_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
am_test_calendar_OBJECTS = test_calendar-calendar_miroc.$(OBJEXT) \
	test_calendar-calendar.$(OBJEXT)
test_calendar_OBJECTS = $(am_test_calendar_OBJECTS)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(noinst_LTLIBRARIES) $(am__DEPENDENCIES_1)
test_calendar_DEPENDENCIES = $(am__DEPENDENCIES_2)
am__objects_3 = test_calendar_coco-calendar_primitive.$(OBJEXT) \
	test_calendar_coco-calendar_core.$(OBJEXT) \
	test_calendar_coco-calendar.$(OBJEXT) $(am__objects_1)
am_test_calendar_coco_OBJECTS = $(am__objects_3) \
	test_calendar_coco-calendar_coco.$(OBJEXT)
test_calendar_coco_OBJECTS = $(am_test_calendar_coco_OBJECTS)
test_calendar_coco_DEPENDENCIES = $(am__DEPENDENCIES_2)
am__objects_4 = test_calendar.$(OBJEXT) $(am__objects_1)
am_test_calendar_comp_OBJECTS = calendar_miroc.$(OBJEXT) \
	$(am__objects_4)
test_calendar_comp_OBJECTS = $(am_test_calendar_comp_OBJECTS)
test_calendar_comp_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_calendar_core_OBJECTS =  \
	test_calendar_core-calendar_core.$(OBJEXT)
test_calendar_core_OBJECTS = $(am_test_calendar_core_OBJECTS)
test_calendar_core_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_calendar_ils_OBJECTS =  \
	test_calendar_ils-calendar_ils.$(OBJEXT)
test_calendar_ils_OBJECTS = $(am_test_calendar_ils_OBJECTS)
test_calendar_ils_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_calendar_matsiro_OBJECTS =  \
	test_calendar_matsiro-calendar_matsiro.$(OBJEXT)
test_calendar_matsiro_OBJECTS = $(am_test_calendar_matsiro_OBJECTS)
test_calendar_matsiro_DEPENDENCIES = $(am__DEPENDENCIES_2)
am__objects_5 = test_calendar_trad-test_calendar.$(OBJEXT) \
	$(am__objects_1)
am_test_calendar_trad_OBJECTS = $(am__objects_5)
am__objects_6 = test_calendar_trad-ucaln.$(OBJEXT)
nodist_test_calendar_trad_OBJECTS = $(am__objects_6)
test_calendar_trad_OBJECTS = $(am_test_calendar_trad_OBJECTS) \
	$(nodist_test_calendar_trad_OBJECTS)
test_calendar_trad_DEPENDENCIES = $(am__DEPENDENCIES_2)
SCRIPTS = $(noinst_SCRIPTS)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
PPF77COMPILE = $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FFLAGS) $(FFLAGS)
LTPPF77COMPILE = $(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_FFLAGS) $(FFLAGS)
AM_V_PPF77 = $(am__v_PPF77_@AM_V@)
am__v_PPF77_ = $(am__v_PPF77_@AM_DEFAULT_V@)
am__v_PPF77_0 = @echo "  PPF77   " $@;
am__v_PPF77_1 = 
F77LD = $(F77)
F77LINK = $(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(F77LD) $(AM_FFLAGS) $(FFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_F77LD = $(am__v_F77LD_@AM_V@)
am__v_F77LD_ = $(am__v_F77LD_@AM_DEFAULT_V@)
am__v_F77LD_0 = @echo "  F77LD   " $@;
am__v_F77LD_1 = 
PPFCCOMPILE = $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS)
LTPPFCCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_FCFLAGS) $(FCFLAGS)
AM_V_PPFC = $(am__v_PPFC_@AM_V@)
am__v_PPFC_ = $(am__v_PPFC_@AM_DEFAULT_V@)
am__v_PPFC_0 = @echo "  PPFC    " $@;
am__v_PPFC_1 = 
FCLD = $(FC)
FCLINK = $(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(FCLD) $(AM_FCFLAGS) $(FCFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_FCLD = $(am__v_FCLD_@AM_V@)
am__v_FCLD_ = $(am__v_FCLD_@AM_DEFAULT_V@)
am__v_FCLD_0 = @echo "  FCLD    " $@;
am__v_FCLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libtouza_local_la_SOURCES) $(test_calendar_SOURCES) \
	$(test_calendar_coco_SOURCES) $(test_calendar_comp_SOURCES) \
	$(test_calendar_core_SOURCES) $(test_calendar_ils_SOURCES) \
	$(test_calendar_matsiro_SOURCES) $(test_calendar_trad_SOURCES) \
	$(nodist_test_calendar_trad_SOURCES)
DIST_SOURCES = $(libtouza_local_la_SOURCES) $(test_calendar_SOURCES) \
	$(test_calendar_coco_SOURCES) $(test_calendar_comp_SOURCES) \
	$(test_calendar_core_SOURCES) $(test_calendar_ils_SOURCES) \
	$(test_calendar_matsiro_SOURCES) $(test_calendar_trad_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(switchdir)" "$(DESTDIR)$(includedir)"
DATA = $(switch_DATA)
HEADERS = $(include_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	check recheck distdir distdir-am
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
AM_TESTSUITE_SUMMARY_HEADER = ' for $(PACKAGE_STRING)'
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Makedep.inc $(srcdir)/Makefile.in \
	$(top_srcdir)/aminclude_static.am \
	$(top_srcdir)/build-aux/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AM_FCFLAGS = @AM_FCFLAGS@ $(DEBUG) $(am__append_2) \
	$(AM_FCFLAGS_MODULE)
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AUTOREVISION = @AUTOREVISION@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CSCOPE = @CSCOPE@
CTAGS = @CTAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ETAGS = @ETAGS@
EXEEXT = @EXEEXT@
F77 = @F77@
FC = @FC@
FCFLAGS = @FCFLAGS@
FCFLAGS_F = @FCFLAGS_F@
FCFLAGS_F90 = @FCFLAGS_F90@
FCLIBS = @FCLIBS@
FC_DEFINE = @FC_DEFINE@
FC_INCLUDE_touza_ami = @FC_INCLUDE_touza_ami@
FC_INCLUDE_touza_cal = @FC_INCLUDE_touza_cal@
FC_INCLUDE_touza_emu = @FC_INCLUDE_touza_emu@
FC_INCLUDE_touza_nio = @FC_INCLUDE_touza_nio@
FC_INCLUDE_touza_ppp = @FC_INCLUDE_touza_ppp@
FC_INCLUDE_touza_std = @FC_INCLUDE_touza_std@
FC_INCLUDE_touza_trp = @FC_INCLUDE_touza_trp@
FC_LDADD_touza_ami = @FC_LDADD_touza_ami@
FC_LDADD_touza_cal = @FC_LDADD_touza_cal@
FC_LDADD_touza_emu = @FC_LDADD_touza_emu@
FC_LDADD_touza_nio = @FC_LDADD_touza_nio@
FC_LDADD_touza_ppp = @FC_LDADD_touza_ppp@
FC_LDADD_touza_std = @FC_LDADD_touza_std@
FC_LDADD_touza_trp = @FC_LDADD_touza_trp@
FC_MODEXT = @FC_MODEXT@
FC_MODINC = @FC_MODINC@
FC_MODOUT = @FC_MODOUT@
FC_MODULE_touza_ami = @FC_MODULE_touza_ami@
FC_MODULE_touza_cal = @FC_MODULE_touza_cal@
FC_MODULE_touza_emu = @FC_MODULE_touza_emu@
FC_MODULE_touza_nio = @FC_MODULE_touza_nio@
FC_MODULE_touza_ppp = @FC_MODULE_touza_ppp@
FC_MODULE_touza_std = @FC_MODULE_touza_std@
FC_MODULE_touza_trp = @FC_MODULE_touza_trp@
FFLAGS = @FFLAGS@
FGREP = @FGREP@
FILECMD = @FILECMD@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
MPIF77 = @MPIF77@
MPIFC = @MPIFC@
NC_CONFIG = @NC_CONFIG@
NETCDF4_CC = @NETCDF4_CC@
NETCDF4_CFLAGS = @NETCDF4_CFLAGS@
NETCDF4_FC = @NETCDF4_FC@
NETCDF4_FFLAGS = @NETCDF4_FFLAGS@
NETCDF4_FLIBS = @NETCDF4_FLIBS@
NETCDF4_LDFLAGS = @NETCDF4_LDFLAGS@
NETCDF4_LIBS = @NETCDF4_LIBS@
NETCDF4_VERSION = @NETCDF4_VERSION@
NF_CONFIG = @NF_CONFIG@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OPT_STDERR_UNIT = @OPT_STDERR_UNIT@
OPT_STDIN_UNIT = @OPT_STDIN_UNIT@
OPT_STDOUT_UNIT = @OPT_STDOUT_UNIT@
OPT_STD_UNITS_TRY = @OPT_STD_UNITS_TRY@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_REQUIRES = @PACKAGE_REQUIRES@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
RANLIB = @RANLIB@
REALPATH = @REALPATH@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TOUZA_NAME = @TOUZA_NAME@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_F77 = @ac_ct_F77@
ac_ct_FC = @ac_ct_FC@
ac_empty = @ac_empty@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
builddir_touza_ami = @builddir_touza_ami@
builddir_touza_cal = @builddir_touza_cal@
builddir_touza_emu = @builddir_touza_emu@
builddir_touza_nio = @builddir_touza_nio@
builddir_touza_ppp = @builddir_touza_ppp@
builddir_touza_std = @builddir_touza_std@
builddir_touza_trp = @builddir_touza_trp@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
moddir = @moddir@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgconfig_CPPFLAGS = @pkgconfig_CPPFLAGS@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
srcdir_touza_ami = @srcdir_touza_ami@
srcdir_touza_cal = @srcdir_touza_cal@
srcdir_touza_emu = @srcdir_touza_emu@
srcdir_touza_nio = @srcdir_touza_nio@
srcdir_touza_ppp = @srcdir_touza_ppp@
srcdir_touza_std = @srcdir_touza_std@
srcdir_touza_trp = @srcdir_touza_trp@
subdirs_extra = @subdirs_extra@
switchdir = @switchdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
EXTRA_DIST = README-cal.org $(switch_DATA) $(WTCin)
SUBDIRS = .
BUILD_AUX = $(top_srcdir)/build-aux
CLEANFILES = $(noinst_SCRIPTS) $(MIROCH)
MOSTLYCLEANFILES = $(am__append_1) $(am__append_3)
LIST_MODFILES = .modfiles
DEBUG = 
AM_CPPFLAGS = -I$(top_srcdir) $(FC_INCLUDE_touza_std)

# no blank between -MT and NAME
AM_FCFLAGS_DEP = '-MT$@' -MD -MP -MF $*.dep
AM_FCFLAGS_MODULE = $(FC_MODULE_touza_std)
COPY_SOURCE_TARGETS = $(lib@TOUZA_NAME@_la_SOURCES:%=copy-%)
DIFF_SOURCE_TARGETS = $(lib@TOUZA_NAME@_la_SOURCES:%=diff-%)
switch_DATA = calendar_miroc.F90 calendar_coco.F90
include_HEADERS = touza_cal.h
noinst_LTLIBRARIES = libtouza_local.la
cal_SOURCES = calendar_primitive.F90 calendar_core.F90 calendar.F90 $(include_HEADERS)
libtouza_local_la_SOURCES = $(cal_SOURCES) \
	calendar_matsiro.F90 calendar_ils.F90

LOG_DRIVER = env AM_TAP_AWK='$(AWK)' $(SHELL) $(BUILD_AUX)/tap-driver.sh
LOG_DRIVER_FLAGS = '--comments'
noinst_SCRIPTS = $(WTC)
WTC_LOGDIR = log
WTC = wtc.sh
WTCin = $(WTC).in
LOG_COMPILER = $(builddir)/$(WTC)
TEST_NUM = 0
AM_LOG_FLAGS = -l $(WTC_LOGDIR) -t $(TEST_NUM)
TESTS_miroc = auto auto.p grego_i grego_i.p grego_l grego_l.p ideal ideal.p
TESTS_matsiro = matsiro.grego matsiro.365
TESTS_ils = ils.grego     ils.noleap  ils.30360
TESTS = $(am__append_4) $(TESTS_matsiro) $(TESTS_ils)
check_targets_miroc = check-auto check-auto.p check-grego_i check-grego_i.p \
						check-grego_l check-grego_l.p check-ideal check-ideal.p

check_targets_matsiro = check-matsiro.grego check-matsiro.365
check_targets_ils = check-ils.grego check-ils.noleap check-ils.30360
check_targets_all = $(check_targets_miroc) $(check_targets_matsiro) $(check_targets_ils)
TEST_COMMON_SRCS = test_calendar.F90 $(include_HEADERS)
TEST_COMMON_LIBS = $(noinst_LTLIBRARIES) $(FC_LDADD_touza_std)
UCALN = ucaln.F
MIROCH = miroc.h
test_calendar_SOURCES = calendar_miroc.F90 calendar.F90
test_calendar_LDADD = $(TEST_COMMON_LIBS)
test_calendar_CPPFLAGS = $(AM_CPPFLAGS) -DTEST_CALENDAR=1
test_calendar_core_SOURCES = calendar_core.F90
test_calendar_core_LDADD = $(TEST_COMMON_LIBS)
test_calendar_core_CPPFLAGS = $(AM_CPPFLAGS) -DTEST_CALENDAR_CORE=1
test_calendar_comp_SOURCES = calendar_miroc.F90 $(TEST_COMMON_SRCS)
test_calendar_comp_LDADD = $(TEST_COMMON_LIBS)
test_calendar_trad_SOURCES = $(TEST_COMMON_SRCS)
nodist_test_calendar_trad_SOURCES = $(UCALN)
test_calendar_trad_LDADD = $(TEST_COMMON_LIBS)
test_calendar_trad_CPPFLAGS = $(AM_CPPFLAGS) -DOPT_USE_BASE_UCALN=1
test_calendar_matsiro_SOURCES = calendar_matsiro.F90
test_calendar_matsiro_LDADD = $(TEST_COMMON_LIBS)
test_calendar_matsiro_CPPFLAGS = $(AM_CPPFLAGS) -DTEST_CALENDAR_MATSIRO=1
test_calendar_ils_SOURCES = calendar_ils.F90
test_calendar_ils_LDADD = $(TEST_COMMON_LIBS)
test_calendar_ils_CPPFLAGS = $(AM_CPPFLAGS) -DTEST_CALENDAR_ILS=1
test_calendar_coco_SOURCES = $(cal_SOURCES) calendar_coco.F90
test_calendar_coco_LDADD = $(TEST_COMMON_LIBS)
test_calendar_coco_CPPFLAGS = $(AM_CPPFLAGS) -DTEST_CALENDAR_COCO=1 -DOPT_KIND_REAL=8
@enable_module_dependencies_TRUE@calendar_lo_MODULE_DEPS = $(builddir)/touza_cal_primitive.$(FC_MODEXT) $(builddir)/touza_cal_core.$(FC_MODEXT)
@enable_module_dependencies_TRUE@calendar_o_MODULE_DEPS = $(builddir)/touza_cal_primitive.$(FC_MODEXT) $(builddir)/touza_cal_core.$(FC_MODEXT) $(builddir)/touza_cal.$(FC_MODEXT)
@enable_module_dependencies_TRUE@calendar_coco_o_MODULE_DEPS = $(builddir)/touza_cal_primitive.$(FC_MODEXT) $(builddir)/touza_cal.$(FC_MODEXT) $(builddir)/touza_cal_coco.$(FC_MODEXT)
@enable_module_dependencies_TRUE@calendar_core_lo_MODULE_DEPS = $(builddir)/touza_cal_primitive.$(FC_MODEXT)
@enable_module_dependencies_TRUE@calendar_core_o_MODULE_DEPS = $(builddir)/touza_cal_primitive.$(FC_MODEXT) $(builddir)/touza_cal_core.$(FC_MODEXT)
@enable_module_dependencies_TRUE@calendar_ils_lo_MODULE_DEPS = $(builddir)/touza_cal.$(FC_MODEXT)
@enable_module_dependencies_TRUE@calendar_ils_o_MODULE_DEPS = $(builddir)/touza_cal.$(FC_MODEXT) $(top_builddir)/std/touza_std.$(FC_MODEXT) $(builddir)/touza_cal_ils.$(FC_MODEXT)
@enable_module_dependencies_TRUE@calendar_matsiro_lo_MODULE_DEPS = $(builddir)/touza_cal.$(FC_MODEXT)
@enable_module_dependencies_TRUE@calendar_matsiro_o_MODULE_DEPS = $(builddir)/touza_cal.$(FC_MODEXT) $(top_builddir)/std/touza_std.$(FC_MODEXT) $(builddir)/touza_cal_matsiro.$(FC_MODEXT)
@enable_module_dependencies_TRUE@calendar_miroc_o_MODULE_DEPS = $(builddir)/touza_cal.$(FC_MODEXT) $(builddir)/touza_cal_primitive.$(FC_MODEXT) $(builddir)/touza_cal_miroc.$(FC_MODEXT) $(builddir)/touza_cal_core.$(FC_MODEXT)
@enable_module_dependencies_TRUE@calendar_primitive_lo_MODULE_DEPS = $(top_builddir)/std/touza_std.$(FC_MODEXT)
@enable_module_dependencies_TRUE@calendar_primitive_o_MODULE_DEPS = $(top_builddir)/std/touza_std.$(FC_MODEXT)
@enable_module_dependencies_TRUE@test_calendar_calendar_o_MODULE_DEPS = $(builddir)/touza_cal_primitive.$(FC_MODEXT) $(builddir)/touza_cal_core.$(FC_MODEXT) $(builddir)/touza_cal.$(FC_MODEXT)
@enable_module_dependencies_TRUE@test_calendar_calendar_miroc_o_MODULE_DEPS = $(builddir)/touza_cal.$(FC_MODEXT) $(builddir)/touza_cal_primitive.$(FC_MODEXT) $(builddir)/touza_cal_miroc.$(FC_MODEXT) $(builddir)/touza_cal_core.$(FC_MODEXT)
@enable_module_dependencies_TRUE@test_calendar_o_MODULE_DEPS = $(builddir)/touza_cal_miroc.$(FC_MODEXT) $(top_builddir)/std/touza_std.$(FC_MODEXT)
@enable_module_dependencies_TRUE@test_calendar_coco_calendar_o_MODULE_DEPS = $(builddir)/touza_cal_primitive.$(FC_MODEXT) $(builddir)/touza_cal_core.$(FC_MODEXT)
@enable_module_dependencies_TRUE@test_calendar_coco_calendar_coco_o_MODULE_DEPS = $(builddir)/touza_cal_primitive.$(FC_MODEXT) $(builddir)/touza_cal.$(FC_MODEXT) $(builddir)/touza_cal_coco.$(FC_MODEXT)
@enable_module_dependencies_TRUE@test_calendar_coco_calendar_core_o_MODULE_DEPS = $(builddir)/touza_cal_primitive.$(FC_MODEXT)
@enable_module_dependencies_TRUE@test_calendar_coco_calendar_primitive_o_MODULE_DEPS = $(top_builddir)/std/touza_std.$(FC_MODEXT)
@enable_module_dependencies_TRUE@test_calendar_core_calendar_core_o_MODULE_DEPS = $(builddir)/touza_cal_primitive.$(FC_MODEXT) $(builddir)/touza_cal_core.$(FC_MODEXT)
@enable_module_dependencies_TRUE@test_calendar_ils_calendar_ils_o_MODULE_DEPS = $(builddir)/touza_cal.$(FC_MODEXT) $(top_builddir)/std/touza_std.$(FC_MODEXT) $(builddir)/touza_cal_ils.$(FC_MODEXT)
@enable_module_dependencies_TRUE@test_calendar_matsiro_calendar_matsiro_o_MODULE_DEPS = $(builddir)/touza_cal.$(FC_MODEXT) $(top_builddir)/std/touza_std.$(FC_MODEXT) $(builddir)/touza_cal_matsiro.$(FC_MODEXT)
@enable_module_dependencies_TRUE@test_calendar_trad_test_calendar_o_MODULE_DEPS = $(top_builddir)/std/touza_std.$(FC_MODEXT)
@enable_module_dependencies_TRUE@touza_cal_mod_MODULE_DEPS = $(builddir)/touza_cal_primitive.$(FC_MODEXT) $(builddir)/touza_cal_core.$(FC_MODEXT)
@enable_module_dependencies_TRUE@touza_cal_coco_mod_MODULE_DEPS = $(builddir)/touza_cal_primitive.$(FC_MODEXT) $(builddir)/touza_cal.$(FC_MODEXT)
@enable_module_dependencies_TRUE@touza_cal_core_mod_MODULE_DEPS = $(builddir)/touza_cal_primitive.$(FC_MODEXT)
@enable_module_dependencies_TRUE@touza_cal_ils_mod_MODULE_DEPS = $(builddir)/touza_cal.$(FC_MODEXT) $(top_builddir)/std/touza_std.$(FC_MODEXT)
@enable_module_dependencies_TRUE@touza_cal_matsiro_mod_MODULE_DEPS = $(builddir)/touza_cal.$(FC_MODEXT) $(top_builddir)/std/touza_std.$(FC_MODEXT)
@enable_module_dependencies_TRUE@touza_cal_miroc_mod_MODULE_DEPS = $(builddir)/touza_cal.$(FC_MODEXT) $(builddir)/touza_cal_primitive.$(FC_MODEXT) $(builddir)/touza_cal_core.$(FC_MODEXT)
@enable_module_dependencies_TRUE@touza_cal_primitive_mod_MODULE_DEPS = $(top_builddir)/std/touza_std.$(FC_MODEXT)
all: all-recursive

.SUFFIXES:
.SUFFIXES: .F .F90 .f .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(top_srcdir)/aminclude_static.am $(srcdir)/Makedep.inc $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign cal/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign cal/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(top_srcdir)/aminclude_static.am $(srcdir)/Makedep.inc $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libtouza_local.la: $(libtouza_local_la_OBJECTS) $(libtouza_local_la_DEPENDENCIES) $(EXTRA_libtouza_local_la_DEPENDENCIES) 
	$(AM_V_FCLD)$(FCLINK)  $(libtouza_local_la_OBJECTS) $(libtouza_local_la_LIBADD) $(LIBS)

test_calendar$(EXEEXT): $(test_calendar_OBJECTS) $(test_calendar_DEPENDENCIES) $(EXTRA_test_calendar_DEPENDENCIES) 
	@rm -f test_calendar$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_calendar_OBJECTS) $(test_calendar_LDADD) $(LIBS)

test_calendar_coco$(EXEEXT): $(test_calendar_coco_OBJECTS) $(test_calendar_coco_DEPENDENCIES) $(EXTRA_test_calendar_coco_DEPENDENCIES) 
	@rm -f test_calendar_coco$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_calendar_coco_OBJECTS) $(test_calendar_coco_LDADD) $(LIBS)

test_calendar_comp$(EXEEXT): $(test_calendar_comp_OBJECTS) $(test_calendar_comp_DEPENDENCIES) $(EXTRA_test_calendar_comp_DEPENDENCIES) 
	@rm -f test_calendar_comp$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_calendar_comp_OBJECTS) $(test_calendar_comp_LDADD) $(LIBS)

test_calendar_core$(EXEEXT): $(test_calendar_core_OBJECTS) $(test_calendar_core_DEPENDENCIES) $(EXTRA_test_calendar_core_DEPENDENCIES) 
	@rm -f test_calendar_core$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_calendar_core_OBJECTS) $(test_calendar_core_LDADD) $(LIBS)

test_calendar_ils$(EXEEXT): $(test_calendar_ils_OBJECTS) $(test_calendar_ils_DEPENDENCIES) $(EXTRA_test_calendar_ils_DEPENDENCIES) 
	@rm -f test_calendar_ils$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_calendar_ils_OBJECTS) $(test_calendar_ils_LDADD) $(LIBS)

test_calendar_matsiro$(EXEEXT): $(test_calendar_matsiro_OBJECTS) $(test_calendar_matsiro_DEPENDENCIES) $(EXTRA_test_calendar_matsiro_DEPENDENCIES) 
	@rm -f test_calendar_matsiro$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_calendar_matsiro_OBJECTS) $(test_calendar_matsiro_LDADD) $(LIBS)

test_calendar_trad$(EXEEXT): $(test_calendar_trad_OBJECTS) $(test_calendar_trad_DEPENDENCIES) $(EXTRA_test_calendar_trad_DEPENDENCIES) 
	@rm -f test_calendar_trad$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(test_calendar_trad_OBJECTS) $(test_calendar_trad_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.F.o:
	$(AM_V_PPF77)$(PPF77COMPILE) -c -o $@ $<

.F.obj:
	$(AM_V_PPF77)$(PPF77COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.F.lo:
	$(AM_V_PPF77)$(LTPPF77COMPILE) -c -o $@ $<

test_calendar_trad-ucaln.o: ucaln.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_calendar_trad_CPPFLAGS) $(CPPFLAGS) $(AM_FFLAGS) $(FFLAGS) -c -o test_calendar_trad-ucaln.o `test -f 'ucaln.F' || echo '$(srcdir)/'`ucaln.F

test_calendar_trad-ucaln.obj: ucaln.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_calendar_trad_CPPFLAGS) $(CPPFLAGS) $(AM_FFLAGS) $(FFLAGS) -c -o test_calendar_trad-ucaln.obj `if test -f 'ucaln.F'; then $(CYGPATH_W) 'ucaln.F'; else $(CYGPATH_W) '$(srcdir)/ucaln.F'; fi`
.F.f:
	$(F77COMPILE) -F $<

.F90.o:
	$(AM_V_PPFC)$(PPFCCOMPILE) -c -o $@ $<

.F90.obj:
	$(AM_V_PPFC)$(PPFCCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.F90.lo:
	$(AM_V_PPFC)$(LTPPFCCOMPILE) -c -o $@ $<

test_calendar-calendar_miroc.o: calendar_miroc.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_calendar_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o test_calendar-calendar_miroc.o `test -f 'calendar_miroc.F90' || echo '$(srcdir)/'`calendar_miroc.F90

test_calendar-calendar_miroc.obj: calendar_miroc.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_calendar_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o test_calendar-calendar_miroc.obj `if test -f 'calendar_miroc.F90'; then $(CYGPATH_W) 'calendar_miroc.F90'; else $(CYGPATH_W) '$(srcdir)/calendar_miroc.F90'; fi`

test_calendar-calendar.o: calendar.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_calendar_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o test_calendar-calendar.o `test -f 'calendar.F90' || echo '$(srcdir)/'`calendar.F90

test_calendar-calendar.obj: calendar.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_calendar_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o test_calendar-calendar.obj `if test -f 'calendar.F90'; then $(CYGPATH_W) 'calendar.F90'; else $(CYGPATH_W) '$(srcdir)/calendar.F90'; fi`

test_calendar_coco-calendar_primitive.o: calendar_primitive.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_calendar_coco_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o test_calendar_coco-calendar_primitive.o `test -f 'calendar_primitive.F90' || echo '$(srcdir)/'`calendar_primitive.F90

test_calendar_coco-calendar_primitive.obj: calendar_primitive.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_calendar_coco_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o test_calendar_coco-calendar_primitive.obj `if test -f 'calendar_primitive.F90'; then $(CYGPATH_W) 'calendar_primitive.F90'; else $(CYGPATH_W) '$(srcdir)/calendar_primitive.F90'; fi`

test_calendar_coco-calendar_core.o: calendar_core.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_calendar_coco_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o test_calendar_coco-calendar_core.o `test -f 'calendar_core.F90' || echo '$(srcdir)/'`calendar_core.F90

test_calendar_coco-calendar_core.obj: calendar_core.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_calendar_coco_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o test_calendar_coco-calendar_core.obj `if test -f 'calendar_core.F90'; then $(CYGPATH_W) 'calendar_core.F90'; else $(CYGPATH_W) '$(srcdir)/calendar_core.F90'; fi`

test_calendar_coco-calendar.o: calendar.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_calendar_coco_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o test_calendar_coco-calendar.o `test -f 'calendar.F90' || echo '$(srcdir)/'`calendar.F90

test_calendar_coco-calendar.obj: calendar.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_calendar_coco_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o test_calendar_coco-calendar.obj `if test -f 'calendar.F90'; then $(CYGPATH_W) 'calendar.F90'; else $(CYGPATH_W) '$(srcdir)/calendar.F90'; fi`

test_calendar_coco-calendar_coco.o: calendar_coco.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_calendar_coco_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o test_calendar_coco-calendar_coco.o `test -f 'calendar_coco.F90' || echo '$(srcdir)/'`calendar_coco.F90

test_calendar_coco-calendar_coco.obj: calendar_coco.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_calendar_coco_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o test_calendar_coco-calendar_coco.obj `if test -f 'calendar_coco.F90'; then $(CYGPATH_W) 'calendar_coco.F90'; else $(CYGPATH_W) '$(srcdir)/calendar_coco.F90'; fi`

test_calendar_core-calendar_core.o: calendar_core.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_calendar_core_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o test_calendar_core-calendar_core.o `test -f 'calendar_core.F90' || echo '$(srcdir)/'`calendar_core.F90

test_calendar_core-calendar_core.obj: calendar_core.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_calendar_core_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o test_calendar_core-calendar_core.obj `if test -f 'calendar_core.F90'; then $(CYGPATH_W) 'calendar_core.F90'; else $(CYGPATH_W) '$(srcdir)/calendar_core.F90'; fi`

test_calendar_ils-calendar_ils.o: calendar_ils.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_calendar_ils_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o test_calendar_ils-calendar_ils.o `test -f 'calendar_ils.F90' || echo '$(srcdir)/'`calendar_ils.F90

test_calendar_ils-calendar_ils.obj: calendar_ils.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_calendar_ils_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o test_calendar_ils-calendar_ils.obj `if test -f 'calendar_ils.F90'; then $(CYGPATH_W) 'calendar_ils.F90'; else $(CYGPATH_W) '$(srcdir)/calendar_ils.F90'; fi`

test_calendar_matsiro-calendar_matsiro.o: calendar_matsiro.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_calendar_matsiro_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o test_calendar_matsiro-calendar_matsiro.o `test -f 'calendar_matsiro.F90' || echo '$(srcdir)/'`calendar_matsiro.F90

test_calendar_matsiro-calendar_matsiro.obj: calendar_matsiro.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_calendar_matsiro_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o test_calendar_matsiro-calendar_matsiro.obj `if test -f 'calendar_matsiro.F90'; then $(CYGPATH_W) 'calendar_matsiro.F90'; else $(CYGPATH_W) '$(srcdir)/calendar_matsiro.F90'; fi`

test_calendar_trad-test_calendar.o: test_calendar.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_calendar_trad_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o test_calendar_trad-test_calendar.o `test -f 'test_calendar.F90' || echo '$(srcdir)/'`test_calendar.F90

test_calendar_trad-test_calendar.obj: test_calendar.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_calendar_trad_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o test_calendar_trad-test_calendar.obj `if test -f 'test_calendar.F90'; then $(CYGPATH_W) 'test_calendar.F90'; else $(CYGPATH_W) '$(srcdir)/test_calendar.F90'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-switchDATA: $(switch_DATA)
	@$(NORMAL_INSTALL)
	@list='$(switch_DATA)'; test -n "$(switchdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(switchdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(switchdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(switchdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(switchdir)" || exit $$?; \
	done

uninstall-switchDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(switch_DATA)'; test -n "$(switchdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(switchdir)'; $(am__uninstall_files_from_dir)
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary"$(AM_TESTSUITE_SUMMARY_HEADER)"$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: $(check_PROGRAMS)
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
auto.log: auto
	@p='auto'; \
	b='auto'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
auto.p.log: auto.p
	@p='auto.p'; \
	b='auto.p'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
grego_i.log: grego_i
	@p='grego_i'; \
	b='grego_i'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
grego_i.p.log: grego_i.p
	@p='grego_i.p'; \
	b='grego_i.p'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
grego_l.log: grego_l
	@p='grego_l'; \
	b='grego_l'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
grego_l.p.log: grego_l.p
	@p='grego_l.p'; \
	b='grego_l.p'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ideal.log: ideal
	@p='ideal'; \
	b='ideal'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ideal.p.log: ideal.p
	@p='ideal.p'; \
	b='ideal.p'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
matsiro.grego.log: matsiro.grego
	@p='matsiro.grego'; \
	b='matsiro.grego'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
matsiro.365.log: matsiro.365
	@p='matsiro.365'; \
	b='matsiro.365'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ils.grego.log: ils.grego
	@p='ils.grego'; \
	b='ils.grego'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ils.noleap.log: ils.noleap
	@p='ils.noleap'; \
	b='ils.noleap'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ils.30360.log: ils.30360
	@p='ils.30360'; \
	b='ils.30360'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(SCRIPTS) $(DATA) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(switchdir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-recursive
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-local distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-includeHEADERS install-switchDATA
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-data-hook
install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook
install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-includeHEADERS uninstall-switchDATA
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-hook
.MAKE: $(am__recursive_targets) check-am install-am install-data-am \
	install-exec-am install-strip uninstall-am

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-TESTS check-am clean clean-checkPROGRAMS clean-generic \
	clean-libtool clean-noinstLTLIBRARIES cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-local distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-data-hook install-dvi \
	install-dvi-am install-exec install-exec-am install-exec-hook \
	install-html install-html-am install-includeHEADERS \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	install-switchDATA installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am recheck tags tags-am \
	uninstall uninstall-am uninstall-hook uninstall-includeHEADERS \
	uninstall-switchDATA

.PRECIOUS: Makefile

install-exec-hook: install-mod
uninstall-hook: uninstall-mod

echo-srcdir:
	@echo $(srcdir)
echo-builddir:
	@echo $(builddir)
echo-top_srcdir:
	@echo $(top_srcdir)
echo-top_builddir:
	@echo $(top_builddir)
echo-build_aux:
	@echo $(BUILD_AUX)

lib:
	@if test "$(top_builddir)" = "$(builddir)"; then :; \
	else cd $(top_builddir) && $(MAKE); fi
rebuild-lib:
	@if test "$(top_builddir)" = "$(builddir)"; then :; \
	else cd $(top_builddir) && $(MAKE) clean all; fi
$(COPY_SOURCE_TARGETS):
	@target=`echo "$@" | sed -e 's/^copy-//'`;\
	if test -e $(builddir)/$${target}; then \
	  echo "exists $${target}."; \
	else \
	  echo "clone $(srcdir)/$${target}"; \
	  cp $(srcdir)/$${target} $(builddir)/$${target} || exit $$?; \
	fi
$(DIFF_SOURCE_TARGETS):
	@target=`echo "$@" | sed -e 's/^diff-//'`;\
	diff $(srcdir)/$${target} $(builddir)/$${target}

install-mod-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making install-mod in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="install-mod-am"; \
	  else \
	    local_target="install-mod"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "install-mod-am" || exit 1; \
	fi; test -z "$$fail"

install-mod: install-mod-recursive

install-mod-am:
@INSTALL_MODULES_TRUE@	@$(NORMAL_INSTALL)
@INSTALL_MODULES_TRUE@	if test -z '$(moddir)'; then false; \
@INSTALL_MODULES_TRUE@	else \
@INSTALL_MODULES_TRUE@		rm -f $(LIST_MODFILES); touch $(LIST_MODFILES);\
@INSTALL_MODULES_TRUE@		for dir in $(DESTDIR)$(moddir); do \
@INSTALL_MODULES_TRUE@		test -z $$dir || $(MKDIR_P) $$dir; \
@INSTALL_MODULES_TRUE@		done; \
@INSTALL_MODULES_TRUE@		for modfile in *.$(FC_MODEXT); \
@INSTALL_MODULES_TRUE@		do test -e $$modfile || continue; \
@INSTALL_MODULES_TRUE@		$(install_sh_DATA) -t $(DESTDIR)$(moddir) $$modfile; \
@INSTALL_MODULES_TRUE@		echo $$modfile >> $(LIST_MODFILES); \
@INSTALL_MODULES_TRUE@		done; \
@INSTALL_MODULES_TRUE@	fi

uninstall-mod-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making uninstall-mod in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="uninstall-mod-am"; \
	  else \
	    local_target="uninstall-mod"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "uninstall-mod-am" || exit 1; \
	fi; test -z "$$fail"

uninstall-mod: uninstall-mod-recursive

uninstall-mod-am:
@INSTALL_MODULES_TRUE@	if test -z '$(moddir)'; then false; \
@INSTALL_MODULES_TRUE@	else \
@INSTALL_MODULES_TRUE@		list=`test -e $(LIST_MODFILES) && cat $(LIST_MODFILES)`; \
@INSTALL_MODULES_TRUE@		files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
@INSTALL_MODULES_TRUE@		dir='$(DESTDIR)$(moddir)'; $(am__uninstall_files_from_dir); \
@INSTALL_MODULES_TRUE@	fi

check-bin-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making check-bin in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="check-bin-am"; \
	  else \
	    local_target="check-bin"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "check-bin-am" || exit 1; \
	fi; test -z "$$fail"

check-bin: check-bin-recursive

check-bin-am:$(check_PROGRAMS)

install-data-hook: install-switchDATA

distclean-local: distclean-logdir

distclean-logdir:
	@if test -d $(WTC_LOGDIR); then rm -rf $(WTC_LOGDIR); else :; fi

$(WTC): $(srcdir)/$(WTCin)
	if sed -e 's!@XNEW@!$(builddir)/test_calendar_comp!g' \
			-e 's!@XOLD@!$(builddir)/test_calendar_trad!g' \
			-e 's!@XMAT@!$(builddir)/test_calendar_matsiro!g' \
			-e 's!@XILS@!$(builddir)/test_calendar_ils!g' $(srcdir)/$(WTCin) > $@; \
		then chmod +x $@; \
		else rm -f $@; fi
$(TESTS):

check-miroc:
	$(MAKE) check TESTS="$(TESTS_miroc)"

check-matsiro:
	$(MAKE) check TESTS="$(TESTS_matsiro)"

check-ils:
	$(MAKE) check TESTS="$(TESTS_ils)"

$(check_targets_all):
	$(MAKE) check TESTS=`echo "$@" | sed -e 's/^check-//'`

$(UCALN): $(MIROCH)
	@if test -f $(srcdir)/$(UCALN); then :; else \
		orgsrc=$${GCMDIR}/src/util/$(UCALN); \
		if test -f "$${orgsrc}"; then \
			echo "copy $${orgsrc}"; cp $${orgsrc} $(builddir)/$@; \
		else \
			echo "Please manually install MIROC/src/util/$(UCALN) in $(abs_builddir)." >&2; exit 1; \
		fi; fi

$(MIROCH):
	touch $@

### automatic dependency
$(builddir)/calendar.lo: $(srcdir)/calendar.F90 $(top_builddir)/touza_config.h $(srcdir)/touza_cal.h $(top_srcdir)/touza.h
$(builddir)/calendar.lo: $(calendar_lo_MODULE_DEPS)

$(builddir)/calendar.o: $(srcdir)/calendar.F90 $(top_builddir)/touza_config.h $(srcdir)/touza_cal.h $(top_srcdir)/touza.h
$(builddir)/calendar.o: $(calendar_o_MODULE_DEPS)

$(builddir)/calendar_coco.o: $(srcdir)/calendar_coco.F90 $(top_builddir)/touza_config.h $(srcdir)/touza_cal.h $(top_srcdir)/touza.h
$(builddir)/calendar_coco.o: $(calendar_coco_o_MODULE_DEPS)

$(builddir)/calendar_core.lo: $(srcdir)/calendar_core.F90 $(top_builddir)/touza_config.h $(srcdir)/touza_cal.h $(top_srcdir)/touza.h
$(builddir)/calendar_core.lo: $(calendar_core_lo_MODULE_DEPS)

$(builddir)/calendar_core.o: $(srcdir)/calendar_core.F90 $(top_builddir)/touza_config.h $(srcdir)/touza_cal.h $(top_srcdir)/touza.h
$(builddir)/calendar_core.o: $(calendar_core_o_MODULE_DEPS)

$(builddir)/calendar_ils.lo: $(srcdir)/calendar_ils.F90 $(top_builddir)/touza_config.h $(srcdir)/touza_cal.h $(top_srcdir)/touza.h $(top_srcdir)/std/touza_std.h
$(builddir)/calendar_ils.lo: $(calendar_ils_lo_MODULE_DEPS)

$(builddir)/calendar_ils.o: $(srcdir)/calendar_ils.F90 $(top_builddir)/touza_config.h $(srcdir)/touza_cal.h $(top_srcdir)/touza.h $(top_srcdir)/std/touza_std.h
$(builddir)/calendar_ils.o: $(calendar_ils_o_MODULE_DEPS)

$(builddir)/calendar_matsiro.lo: $(srcdir)/calendar_matsiro.F90 $(top_builddir)/touza_config.h $(srcdir)/touza_cal.h $(top_srcdir)/touza.h $(top_srcdir)/std/touza_std.h
$(builddir)/calendar_matsiro.lo: $(calendar_matsiro_lo_MODULE_DEPS)

$(builddir)/calendar_matsiro.o: $(srcdir)/calendar_matsiro.F90 $(top_builddir)/touza_config.h $(srcdir)/touza_cal.h $(top_srcdir)/touza.h $(top_srcdir)/std/touza_std.h
$(builddir)/calendar_matsiro.o: $(calendar_matsiro_o_MODULE_DEPS)

$(builddir)/calendar_miroc.o: $(srcdir)/calendar_miroc.F90 $(top_builddir)/touza_config.h $(srcdir)/touza_cal.h $(top_srcdir)/touza.h
$(builddir)/calendar_miroc.o: $(calendar_miroc_o_MODULE_DEPS)

$(builddir)/calendar_primitive.lo: $(srcdir)/calendar_primitive.F90 $(top_builddir)/touza_config.h $(srcdir)/touza_cal.h $(top_srcdir)/touza.h
$(builddir)/calendar_primitive.lo: $(calendar_primitive_lo_MODULE_DEPS)

$(builddir)/calendar_primitive.o: $(srcdir)/calendar_primitive.F90 $(top_builddir)/touza_config.h $(srcdir)/touza_cal.h $(top_srcdir)/touza.h
$(builddir)/calendar_primitive.o: $(calendar_primitive_o_MODULE_DEPS)

$(builddir)/test_calendar-calendar.o: $(srcdir)/calendar.F90 $(top_builddir)/touza_config.h $(srcdir)/touza_cal.h $(top_srcdir)/touza.h
$(builddir)/test_calendar-calendar.o: $(test_calendar_calendar_o_MODULE_DEPS)

$(builddir)/test_calendar-calendar_miroc.o: $(srcdir)/calendar_miroc.F90 $(top_builddir)/touza_config.h $(srcdir)/touza_cal.h $(top_srcdir)/touza.h
$(builddir)/test_calendar-calendar_miroc.o: $(test_calendar_calendar_miroc_o_MODULE_DEPS)

$(builddir)/test_calendar.o: $(srcdir)/test_calendar.F90 $(top_builddir)/touza_config.h $(srcdir)/touza_cal.h $(top_srcdir)/touza.h $(top_srcdir)/std/touza_std.h
$(builddir)/test_calendar.o: $(test_calendar_o_MODULE_DEPS)

$(builddir)/test_calendar_coco-calendar.o: $(srcdir)/calendar.F90 $(top_builddir)/touza_config.h $(srcdir)/touza_cal.h $(top_srcdir)/touza.h
$(builddir)/test_calendar_coco-calendar.o: $(test_calendar_coco_calendar_o_MODULE_DEPS)

$(builddir)/test_calendar_coco-calendar_coco.o: $(srcdir)/calendar_coco.F90 $(top_builddir)/touza_config.h $(srcdir)/touza_cal.h $(top_srcdir)/touza.h
$(builddir)/test_calendar_coco-calendar_coco.o: $(test_calendar_coco_calendar_coco_o_MODULE_DEPS)

$(builddir)/test_calendar_coco-calendar_core.o: $(srcdir)/calendar_core.F90 $(top_builddir)/touza_config.h $(srcdir)/touza_cal.h $(top_srcdir)/touza.h
$(builddir)/test_calendar_coco-calendar_core.o: $(test_calendar_coco_calendar_core_o_MODULE_DEPS)

$(builddir)/test_calendar_coco-calendar_primitive.o: $(srcdir)/calendar_primitive.F90 $(top_builddir)/touza_config.h $(srcdir)/touza_cal.h $(top_srcdir)/touza.h
$(builddir)/test_calendar_coco-calendar_primitive.o: $(test_calendar_coco_calendar_primitive_o_MODULE_DEPS)

$(builddir)/test_calendar_core-calendar_core.o: $(srcdir)/calendar_core.F90 $(top_builddir)/touza_config.h $(srcdir)/touza_cal.h $(top_srcdir)/touza.h
$(builddir)/test_calendar_core-calendar_core.o: $(test_calendar_core_calendar_core_o_MODULE_DEPS)

$(builddir)/test_calendar_ils-calendar_ils.o: $(srcdir)/calendar_ils.F90 $(top_builddir)/touza_config.h $(srcdir)/touza_cal.h $(top_srcdir)/touza.h $(top_srcdir)/std/touza_std.h
$(builddir)/test_calendar_ils-calendar_ils.o: $(test_calendar_ils_calendar_ils_o_MODULE_DEPS)

$(builddir)/test_calendar_matsiro-calendar_matsiro.o: $(srcdir)/calendar_matsiro.F90 $(top_builddir)/touza_config.h $(srcdir)/touza_cal.h $(top_srcdir)/touza.h $(top_srcdir)/std/touza_std.h
$(builddir)/test_calendar_matsiro-calendar_matsiro.o: $(test_calendar_matsiro_calendar_matsiro_o_MODULE_DEPS)

$(builddir)/test_calendar_trad-test_calendar.o: $(srcdir)/test_calendar.F90 $(top_builddir)/touza_config.h $(srcdir)/touza_cal.h $(top_srcdir)/touza.h $(top_srcdir)/std/touza_std.h
$(builddir)/test_calendar_trad-test_calendar.o: $(test_calendar_trad_test_calendar_o_MODULE_DEPS)

$(builddir)/touza_cal.$(FC_MODEXT): $(srcdir)/calendar.F90 $(top_builddir)/touza_config.h $(srcdir)/touza_cal.h $(top_srcdir)/touza.h
$(builddir)/touza_cal.$(FC_MODEXT): $(touza_cal_mod_MODULE_DEPS)

$(builddir)/touza_cal_coco.$(FC_MODEXT): $(srcdir)/calendar_coco.F90 $(top_builddir)/touza_config.h $(srcdir)/touza_cal.h $(top_srcdir)/touza.h
$(builddir)/touza_cal_coco.$(FC_MODEXT): $(touza_cal_coco_mod_MODULE_DEPS)

$(builddir)/touza_cal_core.$(FC_MODEXT): $(srcdir)/calendar_core.F90 $(top_builddir)/touza_config.h $(srcdir)/touza_cal.h $(top_srcdir)/touza.h
$(builddir)/touza_cal_core.$(FC_MODEXT): $(touza_cal_core_mod_MODULE_DEPS)

$(builddir)/touza_cal_ils.$(FC_MODEXT): $(srcdir)/calendar_ils.F90 $(top_builddir)/touza_config.h $(srcdir)/touza_cal.h $(top_srcdir)/touza.h $(top_srcdir)/std/touza_std.h
$(builddir)/touza_cal_ils.$(FC_MODEXT): $(touza_cal_ils_mod_MODULE_DEPS)

$(builddir)/touza_cal_matsiro.$(FC_MODEXT): $(srcdir)/calendar_matsiro.F90 $(top_builddir)/touza_config.h $(srcdir)/touza_cal.h $(top_srcdir)/touza.h $(top_srcdir)/std/touza_std.h
$(builddir)/touza_cal_matsiro.$(FC_MODEXT): $(touza_cal_matsiro_mod_MODULE_DEPS)

$(builddir)/touza_cal_miroc.$(FC_MODEXT): $(srcdir)/calendar_miroc.F90 $(top_builddir)/touza_config.h $(srcdir)/touza_cal.h $(top_srcdir)/touza.h
$(builddir)/touza_cal_miroc.$(FC_MODEXT): $(touza_cal_miroc_mod_MODULE_DEPS)

$(builddir)/touza_cal_primitive.$(FC_MODEXT): $(srcdir)/calendar_primitive.F90 $(top_builddir)/touza_config.h $(srcdir)/touza_cal.h $(top_srcdir)/touza.h
$(builddir)/touza_cal_primitive.$(FC_MODEXT): $(touza_cal_primitive_mod_MODULE_DEPS)

$(srcdir)/touza_cal.h: 

$(top_builddir)/std/touza_std.$(FC_MODEXT): 

$(top_builddir)/touza_config.h: 

$(top_srcdir)/std/touza_std.h: 

$(top_srcdir)/touza.h: 

### Local Variables:
### mode: makefile-automake
### end:

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
