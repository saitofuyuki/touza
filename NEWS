# TOUZA news
# Maintainer: SAITO Fuyuki
# Time-stamp: <2025/08/19 23:15:45 fuyuki NEWS>

TOUZA news - user-visible changes

Please refer ChangeLog and git log for more information.

* Changes in 1.16.4
** Import revision for miroc7+ils+rainbow on ppp.
Agent-based communicator manager is improved and cleaned to export
some procedures to ils, which enables MIROC-Rainbow again on the new
framework of miroc7(+ils).
** zbt: removed from contents (to export on a new package zab).
TOUZA/Zbt is completely removed from TOUZA contents.  Now python
library is developped under Zab package.
** Revision for nvfortran building (not fully examined).
There are some incompatible features of nvfortran from other compilers
such as gcc or intel.  Some workarounds are introduced to enable
building on nvfortran processing systems.  Moreover, module
import/export sturctures are reformulated in order to achived success
building and running on the nvfortran systems (the maintainer supposes
that they are mostly bugs in the compiler).

* Changes in 1.16.2
** Improvement for MIROC infrastructure replacement
Frequent flush-ing may affect the cpu-time significantly.
Accordingly, monitoring of ppp-agents on the stack (which was very
frequent in miroc) now disables flushing.

* Changes in 1.16.1
** Improvement for MIROC infrastructure replacement
- Complex call-trees (init/diag/finalize) simplified.
- TOUZA_Ppp_amng::show_stack_simple introduced,
  to replace somewhat heavy monitoring with show_stack.
** Bug fixes
- Fixed wrong finalization
- Fixed non-initialized varibles.
- Fix DIST_SUBDIRS duplicaton (build).

* Changes in 1.16.0
** Bug fix on 1.16
- configure fails to skip python checks.
** Developments for miroc7+ils coupling
*** Improved and fixed base-communicator argument management.
Agents control in ppp can be based on bootstrap MPI communicator
other than MPI_COMM_WORLD.  This design was already implemented,
however there is a bug to disturb the feature.
*** Functions for leap-cycle introduced.
*** Zbt is still included in the pacakge but disabled by default.
* Release of 1.15 --- final revision before touza-zbt separation
This is the final revision which bundles touza-zbt, python interface
of TOUZA library.  From next revision (1.16 or later), touza-zbt will
be developped/packaged/released independently from TOUZA library,
because it is no longer a package only for TOUZA/Nio formats, but for
general file formats using xarray.  Bug fixes will be backported from
new touza-zbt package, but new development relating to python
interfaces on TOUZA package is frozen.
New release of touza-zbt is under construction.  Detail will be
announced.

* Changes in 1.15
** Bug fixes around zbt for newer matploblib (maybe 3.10 or later)
From matplotlib 3.10 (or 3.9), Normalize.autoscale() in adjust_norm()
method does not work well at slice turning, which raises
NotImplementedError('cannot remove artist').  It seems that
Normalize.autoscale is examined for deleted instance, which can be
avoided by giving up of reuse of the instance.  This workaround can
be used for 3.8, so introduced as standard.
** Figure resizing improved.
At some situation, zbcont hangs at drawing of a large geometry figure,
due to unknown reason.  It is suspected to be related to Qt5 backend.
Instead of a solution, figure resizing is improved to implement
auto-scaling of fonts, linewidths, etc.
** Clipping argument is introduced into zbcont =--projection PROJECTION=.
This feature is experimental, which may be improved or redesigned in
the future release.  Explicit map clipping can be specified by
=PROJECTION=.  Clipping coordinates are not geological, but those
transformed.  You can first try manual clipping with matplotlib
zoom-tool.  Press =I= when you are satisfied, and clipping coordinates
are shown in the terminal, such as:
: <axes: body>
:   :
:   xlim:  (-1901879., 2189097.)
:   :
:   ylim:  (-4005705., 24150.)
:   :
At next run of =zbcont=, clipping is recovered with additional
parameters into =--projection=, such as:

: % zbcont --projection=nps+45/-1901879.,2189097.,-4005705.,24150.

where the clipping range is specified by appending
=/<xlow>,<xhigh>,<ylow>,<yhigh>=.

* Changes in 1.14.5
** Bug fixes around zbt and related
*** [FATAL] Fix plotting of sliced array-files.
Arrays of GTOOL3/Nio format with partial slices (clipping along axis n
using header attributes of ISTRn, IENDn) do not work as expected.

Indeed, there is confusion in the implementation before 1.14.5
whether or not the argument start is relative to ISTRn.
New property _TouzaCoreVar.pdims is introduced, which corresponds to
/physical/ extents in the file to deal with this confusion.  Argument
start is now defined as relative value to the ISTRn position.

Thus, dimension clipping by index now corresponds to the shape of
input data-file, not to the original span of axis-files.
It is under consideration whether to implement clipping by index in
terms of the original span.
*** [CRITICAL] pre post arguments to be optional everywhere.
Fix declaration of argument pre and post in sus functions, to be
optional.
*** [severe] Fix parser of transform/projection/crs.
Geographic projection without map features now works again.
*** [severe] Fix colormap parser.
** Improvement of array clipping on zbcont.
Clipping by index for multiple-dimension coordinate now works.
** gentpco, impromptu
See =zbt/README-zbt.org= (not =jmz/README-jmz.org=) for brief
description how to run.

* Changes in 1.14.4
** Minor improvements in zbcont
Color and alpha parameters of the cartopy features can be controlled by
command-line.

* Changes in 1.14.3
** Plotting with multiple-dimension coordinates introduced.
Plotting using so-called non-dimension coordinates are enabled.
If applicable, the target coordinates to plot is controlled by
=--plot= arguments of =zbcont=, to select either dimension or
non-dimension coordinates.
See =zbt/README-zbt.org= for detail.
** Document in python sources partially improved.
** More command-line arguments are added to =zbcont=.
** bug fixes in zbt, nio.

* Changes in 1.14.2
** Struggle for python clean distribution.
** bug fixes in zbcont.

* Changes in 1.14.1 from 1.13
** TOUZA/Zbt public release
- Much efforts are devoted, in particular, on improvement of sample
  implementation zbcont
- Indeed, zbcont is now no more sample command but (hopefully) a
  useful entry tool for beginners and experts.
- Many mouse controls are now achieved on zbcont.
- Datetime coordinate is introduced using python cftime package
  and/or numpy.datetime64 class.
- Non-linear coordinates can be chosen.
- Non-linear color map plotting can be chosen.
- Still document of TOUZA/Zbt is limited, however at least most
  functions of zbcont may be used intuitively with mouse controls.
** libtouza loading
- Although it is not the intention raised from the original motivation
  of TOUZA development, zbt is now allowed to work even without
  libtouza.

* Changes in 1.13.2 from 1.13.0
- batch (non-interactive) drawing improved
- cartopy feature introduced in zbcont (still experimental)
- cyclic coordinate introduced (probably work on the limited cases)

* Changes in 1.13.0 from 1.12.3.7
- zbcont beta release

* Changes in 1.12.3.7 from 1.12.3.5
- synchronize python package version
- improve zbcont, to emulate legacy gtcont
- restructure and clean python packaging.

* Changes in 1.12.3.5 from 1.12.3.3
- [CRITICAL] integer array treatment in zbt.
- Minor improvements around build and installation

* Changes in 1.12.3.3 from 1.12.3.2
** Bug fixes
- [SEVERE] dataset[variable] access failed due to wrong usage of
  split().
** Minor improvements
- Introduce coordinate-variable in TOUZA/Zbt (to improve more).

* Changes in 1.12.3.2 from 1.12.3.1
** zbt, to release
*** zbcont, basic implementation of contour plotter
*** xrnio.py, dsnio.py, libtouza.py, three-level python library for TOUZA/Nio format.
** nio [SEVERE] registration check for path
In old fortran standard, different connection of already-opened file
to new unit may fail.  A workaround is introduced.

As far as I checked, a new unit connection for already opened file
fails using tnb_file_is_nio(), with GNU fortran/gcc (Debian 14.1.0-5
or 14.1.0).  On the other hand, cache_open_read() seems to accept
this feature.

* Changes in 1.12.3.1 from 1.12.3
** TOUZA/Zbt + TOUZA/Jmz/ConvOy alpha releases
*** TOUZA/zbt - python interface of TOUZA library
*** TOUZA/Jmz/ConvOy - remapping procedures
** Bug fixes
   - [FATAL] std_sus: file positioning fails at a large skipping.
   - [CRITICAL] nio_cache: Need group decomposition by records.

* Changes in 1.12.3 from 1.12.1
** Alpha release of remapping procedures
   - Emu/ugg, procedures related geodesics
   - Emu/ugg, procedures related polar stereographic projections
   - Ami, friendly coupler framework
     - MIROC legacy R[AO]file
     - geographic/polar-stereographic remapping
   - A new NIO-format PTx.
   - Cached-Nio interface improvement for Jmz.
   - Jmz/ConvOy implemented (to be renamed from qoxi later)
** Bug fixes
   - [SEVERE] Fix POP/GO/STOP processing.
   - [SEVERE] successive tagged POP enabled.
   - [SEVERE] trim long fmt string to store in header.
   - [SEVERE] hungry-mode failed occasionally.
   - [CRITICAL] header is not updated during group reading.
   - [FATAL] wrong operation with lazy min max.
   - [FATAL] zero-size final suspending special.
   - [FATAL] initial zero-size subrecord raise an error.
   - many bug fixes.

* Changes in 1.12.1 from 1.12
** Bug fixes
- (jmz/chak) Fix operator GEU computation
- (jmz/chak) Fix operator ZSIGN computation
- (jmz/chak) Fix DUP after MARK operation.
- (jmz/chak) Reject invalid index coordinates
** Other changes
- (jmz/chak) introduce DEAL DSET ID operators
- (jmz/chak) buffers separated by blank line at FLUSHing

* Changes in 1.12 from 1.11.2
** Major changes
*** SHAPE-like operators
- Coordinate deletion by SHAPE parameters is no more supported.
  Instead, hungry-mode or greedy-mode option is introduced as
  command-line argument (-C and +C, respectively).
- SHIFT operator is introduced to shift elements along coordinates.
  Cyclic condition is also supported.
- According to the modification above, SHAPE parameter complex are now
  slightly simplified.
- The SHAPE family: SHAPE, PERM, SIZE, and SHIFT share procedures
  instead of the case when the option is single integer.  This may
  help easier representation of simple shapes.
*** Sweep operators
- Operators COUNT, SUM, WSUM, and WMV are introduced.  These operators
  works as reduction operators (to compute along specified coordinates)
  and/or accumulation operators (to compute along stacks).
  - Normal operators ADD, MAX, MIN, MUL have now option to work as
    reduction operators.  If enabled, it computes not along stacks but
    along specified coordinates.
*** Stack and queue operators
- Stack operators such as DUP, REPEAT, POP, DIST, INSERT, EXCH are
  much improved.  They can contain optional parameter (called tuple)
  to control (mostly) iteration.  The sequence DUP DUP is now
  represented by DUP=2, etc.  The old notation is supported but
  deprecated.
- Anchor treatment near stack operators are modified.  Some of them
  are incompatible with the older versions, but much simpler.
- Queue operators ITER, CUM for the stack operators are simplified.
** Minor changes
- Ternary operators IFELSE, INRANGE, BLEND are introduced.
- SIGN is now compatible with FORTRAN intrinsic.
- Output can be ITERated.  Now '= output ITER' output all the stacks
  to the single output file.
** Bug fixes
- Fix the reshaping on DUPed, EXCHanged, CLONEd, COPYed buffers.

* Changes in 1.11.2 from 1.11.1
** Bug fixes
- (nio) [FATAL] URY decoding fails from z>0 layers, which affects chak
  and Nnview.
** Changes
- (chak) operator LAY family introduced.

* Changes in 1.11.1 from 1.11.0
** Bug fixes
- (chak) [FATAL] parse_option failed to detect non-option arguments.
- (chak) [CRITICAL] CUM failed with anchor.

** Changes
- (chak) output infix description according to verbose level.
- (chak) SIZE operator introduced.

* Changes in 1.11.0 from 1.10.0
- [FATAL] Import fixes around byte-order detection.
- As far as tested, the byte-order test passes even when environment
  variables (GFORTRAN_CONVERT_UNIT, etc) is set.

* Changes in 1.10.0 from 1.09.0
** Major changes
- (jmz/chak) [SEVERE] file-open errors message improved.
- (jmz/chak) Use Bn notation by default and handle if debug.
- (nio_cache) cache attributes redesigned.
- (nio_control) open/close/search dispatcher templates.
- (jmz/chak) version increased.

** Bug fixes
- [SEVERE] fix urt reading, etc
- [severe] fix ulast recording at new_unit().

* Changes in 1.09.0 from 1.08.1
** Major changes
- cache, c-interfaces, slice read access features etc for Nnview.
- revisit for MIROC/default
* Changes in 1.08.1 from 1.08.0
** Bug fixes
- [critical] hack to handle long message (thanks to tatebe-san).

* Changes in 1.08.0 from 1.07.0
** Major changes
*** Big-GTOOL design enabled by default
- =nio= and =jmz/chak= now correctly manages Big-GTOOL format.
- =-X= or =+X= option on =chak= disables Big-GTOOL design,
  i.e., sub-record decomposition is used for large records.
** Other changs
- (jmz/chak) fix to parse infinite range.

* Changes in 1.07.0 from 1.06.0
** Major changes
*** Design of URT MRT revised
- URT MRT internal formats are revised, which is incompatible with
  those of 1.06.0 or before.
- Obsolete design (URTa) is no more supported.
** Other changes
- (chak) URT MRT tweaking introduced.
- some primitive procedures improved.

* Changes in 1.06.0 from 1.05.6
- (chak) [incompatible] new shape special symbols '+' and '-'.
  '-' in shape argument now deletes the specific rank.
  '+' in shape argument replaces old behaviour of '-', which inserts
  new (empty or named) coordinate at the specific rank.
- (chak) multiple record stacking from file operands implemented.

* Changes in 1.05.6 from 1.05.5
- (chak) Reshaping improved.
  - Index operator (Cn, X, etc) now has dummy null rank of
    non-specific coordinates.

* Changes in 1.05.5 from 1.05.4
- (chak) Reshaping redesigned and improved.

* Changes in 1.05.4 from 1.05.3
- (chak) [critical] default ascii format modified
- (chak) [SEVERE] coordinate ordering may fail at explicit ordering

* Changes in 1.05.3 from 1.05.2
- (chak) Improve automatic coordinate matching
- (chak) -N flag introduced to control null-coordinate parsing
- (chak) some bug fixes.

* Changes in 1.05.2 from 1.05.1
- (chak) [CRITICAL] modify default MISS to follow the legacy magic number
- (chak) ascii/binary input/output hacked
- (chak) header editing improved
- (div) exclude div subdirectory to build for release

* Changes in 1.05.1 from 1.03.0
- various bug fix in jmz/chak alpha

* Changes in 1.05.0 from 1.03.1
- jmz/chak alpha version
- nio/nio_nctcdf for minimum usage of NetCDF library
- nng is renamed into nio.
- std/std_htb implemented for hash-table management
- various bug fixes

* Changes in 1.03.1 from 1.03.0
- [FATAL] MIROC with-T confirmed to build/run *even not on git*

* Changes in 1.03.0 from 1.02.0
- MIROC with-T confirmed to build/run.
- (nng) nng works in MIROC.
- (ppp) agent, instead of <CI>.

* Changes in 1.02.0 from 1.01.0
- MIROC with-T pilot (xmcomm replacement)
- (ppp) parallel processing procedures, to replace xmcomm/xmking
- (emu) emulate miroc utility

* Changes in 1.01.0 from 1.00.4
- Alpha release to provide URT-format trials
- (jmz) sample utilities to build with TOUZA library
- (nng) n-n-g is not gtool
- (trp) trapiche, real/integer arrays compression
- (cal) restructured (except for miroc/jcup/ils/matsiro/coco interfaces)
- pkgconf
- clean common procedures (init/diag/finalize)
- various bug fixes

* Changes in 1.00.4 from 1.00.3
- (cal) adjustment for ILS
- (cal) adjustment for MATSIRO

* Changes in 1.00.3 from 1.00.2
- bug fixed (for installation on ES4 systems)

* Changes in 1.00.2 from 1.00.1
- (cal) COCO compatible interface
- (cal) inim argument added to control TOUZA/Std initialization.
- (std/env) byte-order diagnostics implemented
- bug fixed

* Changes in 1.00.1 from 1.00
- (std) [Critical] syntax error when iso_fortran_env disabled.
- (cal) [critical] calendar string parser/formatter improved.

* Changes in 1.00 (initial-Release) from 0.99.9
- [CRITICAL] auto-mode treatment modified, following latest ucaln.F.
- [CRITICAL] miroc test(8) now ignore CCC2YH test.

* Changes in 0.99.9 (pre-Release) from 0.99.5
- [CRITICAL] standardized design for common procedures introduced.
  - contents and order of the arguments of init() diag() finalize()
    are modified and unified.

* Changes in 0.99.5 from 0.99.2
- [CRITICAL] (m4c) at_ prefix replaced with mt_.
- autoconf macros (m4c/mt_*) installation.
- (std) add some procedures.

* Changes in 0.99.2 from 0.99
- additional argument functions introduced.
- get_args renamed into get_arg.

* Changes in 0.99 from 0.9
- git-submodule structure discarded.  Subpackages are no more stand
  alone.
- Module naming modified.  Hard-coded module names are form of
  `TOUZA_<Sub>' or `TOUZA_<Sub>_<member>'.   Transformation of
  module names are redesigned and reserved for future development.
- Header files are renamed into `touza_<sub>.h'
- Default installation paths are changed.  Module files are under
  $(pkgincludedir);  Header file are under $(includedir).

* Changes in 0.9
- Beta release.

# Local Variables:
# mode: org
# End:

#  LocalWords:  TOUZA SAITO Fuyuki fuyuki ChangeLog chak ascii jmz YH
#  LocalWords:  subdirectory nio nctcdf NetCDF nng htb MIROC ppp URT
#  LocalWords:  xmcomm xmking miroc gtool trp trapiche pkgconf init
#  LocalWords:  ILS MATSIRO inim env iso fortran formatter ucaln CCC
#  LocalWords:  pre diag autoconf args arg submodule Subpackages zbt
#  LocalWords:  touza pkgincludedir includedir ISTRn IENDn pdims sus
#  LocalWords:  TouzaCoreVar colormap zbcont gentpco cartopy Datetime
#  LocalWords:  cftime numpy datetime libtouza gtcont xrnio py dsnio
#  LocalWords:  tnb gcc ugg stereographic Ami coupler AO PTx ConvOy
#  LocalWords:  qoxi fmt subrecord GEU ZSIGN DUP DSET FLUSHing WSUM
#  LocalWords:  WMV MUL EXCH ITER IFELSE INRANGE ITERated DUPed URY
#  LocalWords:  EXCHanged CLONEd COPYed Nnview GFORTRAN Bn urt ulast
#  LocalWords:  tatebe san changs MRT URTa Cn matploblib matplotlib
#  LocalWords:  autoscale NotImplementedError backend linewidths xlim
#  LocalWords:  ylim xlow xhigh ylow yhigh
