#!@ZSH@
# Time-stamp: <2022/10/07 10:09:51 fuyuki genx.sh.in>

main ()
{
  local NI=16 NJ=8 NK=10
  local NT=(1 2 3)
  # local NT=(1)
  local fmt=ur4:b

  # g  lll  full
  # a  lll  full mean
  # s  lll  full mean (skip)
  # p  lll  region-p 1:5    1:3  2:5   p-q overwrapped
  # q  lll  region-q 4:7    2:4  4:6   p-r independent
  # r  lll  region-r 11:14  5:7  7:9
  # c  xyz  full

  local XX=()
  local YY=()
  local ZZ=()

  XX+=(g lon,$NI)       YY+=(g lat,$NJ)      ZZ+=(g lev,$NK)
  XX+=(a lon,$NI,0,0)   YY+=(a lat,$NJ,0,0)  ZZ+=(a lev,$NK,0,0)
  XX+=(s     $NI)       YY+=(s     $NJ)      ZZ+=(s     $NK)
  XX+=(p lon,$NI,1,+5)  YY+=(p lat,$NJ,1,+3) ZZ+=(p lev,$NK,2,+4)
  XX+=(q lon,$NI,4,+4)  YY+=(q lat,$NJ,2,+3) ZZ+=(q lev,$NK,4,+3)
  XX+=(r lon,$NI,11,+4) YY+=(r lat,$NJ,5,+3) ZZ+=(r lev,$NK,7,+3)
  XX+=(n     $NI,2,+8)  YY+=(n     $NJ,3,+3) ZZ+=(n     $NK,1,+7)
  XX+=(u     $NI,0,-1)  YY+=(u     $NJ,0,-1) ZZ+=(u     $NK,0,-1)
  XX+=(t -,$NI,0,0)     YY+=(t -,$NJ,0,0)    ZZ+=(t -,$NK,0,0)

  XX+=(e lon,$NI,1,-5)  YY+=(e lat,$NJ,1,-3) ZZ+=(e lev,$NK,2,-4)
  XX+=(c xs,$NI)        YY+=(c ys,$NJ)       ZZ+=(c zs,$NK)

  local SSET=(e p q r)
  local SKIP=() i= j=
  for j in $SSET
  do
    for i in ${SSET:#$j}
    do
      SKIP+=("$i$j")
    done
  done
  for j in p q r e n
  do
    SKIP+=("c$j" "${j}c")
  done
  # print - $SKIP
  # exit 0

  local xsfx= ysfx= zsfx=
  local xco=  yco=  zco=

  local zarg= yarg= xarg= args=()
  local base=ex/ex00
  mkdir -p $base:h

  local jmzex=./jmzex
  local jopts=(-f -v -v -v)

  local nt=
  for zsfx zco in $ZZ
  do
    gen_arg zarg Z "$zco"
    for ysfx yco in $YY
    do
      [[ ${SKIP[(I)$ysfx$zsfx]} -gt 0 ]] && continue
      gen_arg yarg Y "$yco"
      for xsfx xco in $XX
      do
        [[ ${SKIP[(I)$zsfx$xsfx]} -gt 0 ]] && continue
        [[ ${SKIP[(I)$xsfx$ysfx]} -gt 0 ]] && continue
        gen_arg xarg X "$xco"
        args=("$xarg" "$yarg" "$zarg")
        sfx=$xsfx$ysfx$zsfx
        for nt in $NT
        do
          ofile=${base}-${nt}_$sfx 
          if [[ ! -e $ofile ]]; then
            wrap_jmzex $jopts T=$nt "${(@)args}" $ofile $fmt TITLE="$sfx" || return $?
          fi
        done
      done
    done
  done
  return 0
}
gen_arg ()
{
  local __var=$1; shift || return $?
  local tag=$1; shift || return $?
  local co=$1
  local __val=
  co=("${(@s:,:)co}")

  if [[ $#co -eq 1 ]]; then
    __val="$tag=,$co[1],0,0"
  else
    [[ $#co -eq 3 ]] && co=('' "${(@)co}")
    __val="$tag=${(j:,:)co}"
  fi
  : ${(P)__var::=$__val}
  return 0
}

wrap_jmzex ()
{
  print -u2 - "# jmzex $*"
  $jmzex "$@"
  return $?
}

main "$@"; err=$?
exit $?

# Local Variables:
# mode: sh-mode
# sh-shell: zsh
# End:
