Release-1.16.1 / 2025-05-25
===========================

  * Import restucturing for MIROC exports.
  * ppp: (amng) Improved after on-the-fly experiment with MIROC.
  * ppp: (amng) [FATAL] Fixed reference group to compare.
  * std: (mwe) [FATAL] wrong finalization to call.
  * cal: (primitive) [CRITICAL] fixed std::finalize call.
  * [IMPORTANT] complex call-trees (init/diag/finalize) simplified.
  * ppp: (amng) communicator and group identity checks in diag.
  * std: (mwe) introduced comp_comms(), comp_groups().
  * std: [severe] Inserted ierr reset.
  * build: [FATAL] fix DIST_SUBDIRS duplicaton, etc.

Release-1.16.0 / 2025-05-15
===========================

  * Cleaned package structure.
  * configure: [FATAL] python checks are not fully excluded.
  * Import developments for miroc7+ils coupling.
  * cal: introduced inq_nday_period, inq_nday_period.
  * ppp: [IMPORTANT] introduced base communicator argument.
  * emu: SETBCM introduced to set base communicator.
  * std: (mwe) [FATAL] invalid communicator substitution.
  * std: (utl) some binary128 variations.

Release-1.15 / 2025-03-06
=========================

  * zbt: (zbcont) clipping on projection hacked.
  * zbt: (zbcont) zorder parameter introduced to map arguments.
  * zbt: (plot,control) resizing improved, in particular on font sizes
  * zbt: (config) update method introduced.
  * zbt: (control) [FATAL] remove reuse of Normalize.

Release-1.14.5 / 2025-02-28
===========================

  * Import zbt bug-fixes and updates.
  * doc: (zbt) document around clipping, gentpco.
  * jmz: (gentpco) cleaned, reduce run-time messages.
  * zbt: (zbcont) [severe] Fix around transform and colormap parser.
  * zbt: (control) improved clipping on multiple-dimension coordinates.
  * zbt: (plot) improve coordinate range parser.
  * zbt: (plot) [FATAL] Fix binding of sliced array-file.
  * zbt: (util) [severe] change tonumber() targets to only str.
  * std: (sus) [CRITICAL] pre post arguments to be optional everywhere.
  * nio: (bindc) tnb_var_lread_* variation introduced.
  * nio: (cache) [FATAL] introduced logical-shape reading.

Release-1.14.4 / 2025-02-26
===========================

  * doc: (zbt) [critical] updated to latest features.
  * zbt: (zbcont) feature argument with optional parameters.
  * zbt: (control) WAIT cursor introduced.
  * zbt: (plot) change add_features arguments
  * zbt: (dsnio) axis paths set by caller.

Release-1.14.3 / 2025-02-21
===========================

  * zbt: Mutlitple-dimension coordinates introduced.
  * zbt: (zbcont) More command-line arguments.
  * zbt: [CRITICAL] fix around coordinates controls.
  * zbt: aspect-ratio controls.
  * zbt: nio accessor introduced.
  * zbt: Imporove documentation on python sources.
  * jmz, emu: Quick import of developments around convoy/gentpco.
  * nio: (cache) [FATAL] null slice for default.

Release-1.14.2 / 2025-01-21
===========================
  * zbt: (build): [severe] restucturing, without setup.py.
  * zbt: (zbcont) [fatal] fix parsing of integer arguments on --plot.

Release-1.14.0 / 2025-01-19
===========================

  * zbt zbcont beta release.
  * zbt: datetime coordinate introduced.
  * zbt: [FATAL] require python 3.11 or later for tomllib.
  * zbt: (pyproject) add cftime, nc-time-axis dependencies.
  * zbt: (zbcont) new arguments.
  * zbt: (zbcont) coloring norm method arguments.
  * zbt: (xrnio) [CRITICAL] fix isel() design, etc.
  * zbt: (config) dict_recursive() method introduced.
  * zbt: (plot,control,zbcont) methods around guides, colormap etc.
  * zbt: (libtouza) option to disable library loading.
  * zbt: (control) point/spine selection with guides by mouse.
  * zbt: (plot) methods for point selections.
  * zbt: (xrnio, control) xarray related functions transferred.
  * zbt: (xrnio) [CRTICAL] fix bug around coodinate parsers.
  * zbt: (dsnio) [severe] data parser improved.
  * zbt: [SEVERE] allow failure to load libtouza.
  * zbt: (pyproject) [FATAL] fix dependencies

Release-1.13.2 / 2024-10-23
===========================

  * Fix bugs in zbcont.
  * zbt: (zbcont) correct map/projection adjustment when not set.
  * zbt: (control) [FATAL] figure reset inserted at batch drawing
  * zbt: (plot) [CRITICAL] Coordinate check for projection

Release-1.13.1 / 2024-10-23
===========================

  * doc: (zbt) zbcont experimental features.
  * zbt: (zbcont) (experimental) map overlay and projection.
  * zbt: (control) permutation improved.
  * zbt: (plot, etc) introduce cartopy features.

Release-1.13.0 / 2024-10-17
===========================

  * doc: (zbt) updated (least) to the latest feature.
  * zbt: (libtouza) [SEVERE] change library search order.
  * build: (zbt) hard-coded library location disabled by default.

Release-1.13 / 2024-10-16
=========================

  * Import zbt development into dev
  * zbcont beta release

Release-1.12.3.7 / 2024-09-04
=============================

  * zbt: synchronize python version with the package.
  * zbt: (zbcont) color method, title text, etc (to improve more).
  * zbt: (dsnio) attributes improved (workaround for eta coordinates)

Release-1.12.3.5 / 2024-08-15
=============================

  * zbt: [CRITICAL] fix integer treatments.

Release-1.12.3.4 / 2024-08-15
=============================

  * Import of updated zbt evelopment for build and installation
  * build: (configure) build-only choice for sub package.
  * std: (mwe, trp) introduce dummy MPI_PROBE, MPI_GET_COUNT.

Release-1.12.3.3 / 2024-08-13
=============================

  * Import of zbt development, to release.
  * zbt: (dsnio) [SEVERE] wrong usage of split().
  * zbt: (build) [SEVERE] import updates for debian packaging.
  * zbt: (dsnio) introduced a new class TouzaMemVar
  * zbt: (xrnio) slightly improved coordinates.
  * zbt: (zbcont) ticks adjustment.

Release-1.12.3.2 / 2024-08-08
=============================

  * Import of zbt development, to release.
  * nio: [SEVERE] registration check introduced.

Release-1.12.3.1 / 2024-07-31
=============================
  * Squash import of zbt and/or convoy developments (for test release).
    * zbt: alpha release of python interface of TOUZA library.
    * jmz/convoy: (still) alpha release of remapping procedures.
      Previously named as qoxi.
  * Bug fixes
    * std: (sus) [FATAL] file positioning fails at a large skipping.
      - Slice reading did not work when the starting position of the
        target slice is away than 2Gbytes.
      - Block reading did work.
      - Probably this bug only damage the nnview.
    * nio: (cache) [CRITICAL] Need group decomposition by records.
      - Null records were allowed, which is much confusing.
        Now the number of non-empty records are identical among group
        members.
    * nio: (header) [severe] type check in get_item excluded when string.

Release-1.12.3 / 2024-06-20
===========================
  * Alpha release of remapping procedures
    * Emu/ugg, procedures related geodesics
    * Emu/ugg, procedures related polar stereographic projections
    * Ami, friendly coupler framework
    * A new NIO-format PTx.
    * Cached-Nio interface improvement for Jmz.
    * Jmz/ConvOy implemented (to be renamed from qoxi later)
  * Emu/ugg
    * Canonical trigonometric functions
  * Ami/table
    * Legacy R[AO]file manipulation
    * Symmetric geographic/polar-stereographic remapping
    * Polar stereographic procedures
    * Geodesic computation.  Coefficient tables are generated with ggf scripts.
    * AGMP (area of geodesic-meridian-parallel) algorithm.
  * Nio
    * PTx format, in particular for sparse-matrix storage (qjds csr storing)
    * Slicing extended onto [UM]RT.
    * Cache interface improved for Jmz/qoxi.  To be applied also by chak.
  * Jmz
    * restructuring of sources
    * gtfna, gtfnb, introduced to emulate legacy gt* binary commands.
    * TOUZA_CFLAGS updated (to export on MIROC)
  * Jmz/chak
    * -I option introduced to control file-buffer naming.
    * [SEVERE] Fix POP/GO/STOP processing.
    * [SEVERE] successive tagged POP enabled.
    * [SEVERE] trim long fmt string to store in header.
    * [SEVERE] hungry-mode failed occasionally.
    * [CRITICAL] header is not updated during group reading.
    * [FATAL] wrong operation with lazy min max.
    * Cached gtool access is prepared (left to implemented)
    * A new operator group, filter, introduced.
    * update coordinate operators (PERM, SHAPE, SHIFT).
    * disable repeat of TRANSForm operators (to raise an error).
    * WSUM reduction implemented.
    * ITERated output implemented.
    * [incompatible] SIGN operator modified.
    * ascii/binary auto TIME entry for multi-records.
    * FTRUNC operator introduced.
    * ETITLE operator introduced.
    * SETE introduced, as SET_EXPONENT() intrinsic.
  * Jmz/convoy(qoxi)
    * subcommands: ps2g ps r2g introduced.  Still alpha.
    * simple finite difference by axis-file.
  * std
    * more primitive functions.
    * (sus) [FATAL] zero-size final suspending special.
    * (sus) [FATAL] initial zero-size subrecord raise an error.
    * fix and redesign of parse_number().
    * (arg) @FILE special argument design.
    * F2003+ new_line() workaround.
    * (ipc) inverse hyperbolic functions introduced.

Release-1.12.1 / 2023-07-19
===========================

  * jmz: (chak) [SEVERE] reject invalid index coordinates.
  * jmz: (chak) [FATAL] fix DUP, ZSIGN, GEU.
  * jmz: (chak) introduce ID, DEAL, DSET.
  * jmz: (chak) buffers separated by blank line at FLUSHing.

Release-1.12 / 2023-07-05
=========================

  * Import many improvment and bug-fix of jmz/chak, etc into dev
  * doc: (jmz) description updated to the latest design.
  * doc: (std) add some description.
  * jmz: (chak) Hungry-mode introduced to replace coordinate deletion.
  * jmz: (chak) Sweep/Accumulation/Reduction operators.
  * jmz: (chak) Lazy-mode operators redesigned.
  * jmz: (chak) [SEVERE] logical coordinates must be refreshed at push.
  * jmz: (chak) [FATAL] Fix normal reduction application.
  * jmz: (chak) [FATAL] Fix physical_index() when cyclic.
  * jmz: (chak) ITERated output implemented.
  * jmz: (chak) ternary operators introduced.
  * jmz: (chak) [IMPORTANT] Stack operators redesigned and improved.
  * jmz: (chak) SHAPE families improved.  Shifts and cyclic shifts introduced.
  * jmz: (chak) [incompatible] SIGN function modified.
  * jmz: (chak) [SEVERE] wrong intent for binary operators.
  * jmz: (chak) PROP operator introduced.
  * jmz: (chak) introduce ATAN (unary) operator.
  * jmz: (chak) write-file tag operation modified.
  * jmz: (chak) coordinate names can be set at shaping of ascii files.
  * jmz: (chak) a new operator CFLUSH introduced.
  * nio: (nio_control) safer intent(out) variables.
  * nio: (nio_cache) safer intent(out) variables.
  * nio: (nctcdf) improvement in treatment of empty dimension.
  * nio: (bindc) tnb_file_close implemented.
  * std: (utl) [FATAL] disable to change default find_offset.
  * std: (env) warn if init_file_bodr not called.
  * std: (arg) increase argument-entry size.
  * std: (log) slight improvement in messaging.
  * std: (utl) implement some new subroutines.
  * m4c: import latest ax_lib_netcdf4.m4 from autoconf-archive.

Release-1.11.2 / 2023-03-30
===========================

  * nio: [FATAL] URY decoding fails from z>0 layers.
  * jmz: (chak) exclude date and time from log when blank.
  * jmz: (chak) operator LAY family introduced.
  * jmz: (doc) correct some descripition.
  * jmz: (build) TOUZA_LDFLAGS activated.

Release-1.11.1 / 2023-03-27
===========================

  * jmz: (chak) [FATAL] parse_option failed to detect non-option arguments.
  * jmz: (chak) [CRITICAL] CUM failed with anchor.
  * jmz: (chak) output infix description according to verbose level.
  * jmz: (chak) SIZE operator introduced.

Release-1.11.0 / 2023-03-25
===========================

  * [FATAL] Import fixes around byte-order detection.
  * [severe] control functions usage corrected.

Release-1.10.0 / 2023-03-23
===========================

  * jmz: (build) required TOUZA version.
  * nio: cache_search draft, to redesign.
  * doc: updated
  * jmz: (chak) squash imports of development branch.
  * touza.h: new error codes added.
  * nio: squash imports of development branch.
  * trp: [severe] fix allocation probelm in test_trapiche_pack.
  * source cleaning (trimming accidental trailing spaces).
  * m4c: echo-build_aux target introduced.
  * std: squash imports of development branch

Release-1.09.0 / 2023-03-07
===========================

  * Counterpart revision for Nnview.
  * nio: slice read accesses are implemented for [UM][RI][Yn].
  * nio: cache feature starts (reserved).
  * trp: partial decoding implemented (sequential mode only).
  * pkgconf: add fclibs entry.
  * std: std_ipc.F90 introduced (to substitute intrinsic IBITS).
  * jmz: safer internal write, with IOSTAT.
  * nio: P[IR]n format introduced (reserved).
  * nio: nct interface improved.
  * nio: introduce MIROC zioparam.F rename, to merge with updated MIROC.
  * std: std_htb redesigned to hold string and/or integer keys.
  * std: suspend-mode access implemented in std_sus.

Release-1.08.1 / 2023-01-30
===========================

  * (jmz) [critical] hack to handle long message.

Release-1.08.0 / 2022-12-21
===========================

  * (jmz,nio) [FATAL] Big-GTOOL design enabled by default.
  * (jmz) [severe] infinite range failed for a particular pattern.
  * (std) [severe] get_size_strm() revised.
  * (m4c,std) Fortran 2003 feature checkers improved.
  * (std) std_prc cleaned and restructured.

Release-1.07.0 / 2022-12-06
===========================

  * Design of URT MRT revised --- incompatible from 1.06.0
  * (nio) URT MRT design revised (URTb).  Default chunk breaking to levels.
  * (jmz) latest URT MRT with tweaking introduced.
  * (std) split_list join_list improved.
  * (std) parse_number improved.
  * (std) sus_pad sus_pad_irec sus_record_mems_irec
    sus_read_slice_irec implemented.

Release-1.06.0 / 2022-11-23
===========================

  * (chak) [incompatible] new shape special symbols '+' and '-'
  * (chak) multiple record stacking implemented.
  * (nio) multiple backward skipping implemented.
  * (nio) [FATAL] MRY first property to write was wrong.

Release/1.05.6 2022/11/04
=========================

  * [build] distcheck includes jmz/.
  * (chak) chak_opr introduced to separate operation procedures.
  * (chak) shape logging improved.
  * (chak) [severe] decompose_coordinate_mod failed to perse.
  * (chak) [IMPORTANT] physical array accepts null dimension.

Revision 1.05.5 / 2022-11-01
============================

  * (chak) Reshaping redesigned
    * permutation, spreading, transforming is greatly improved.
    * topological sorting introduced to set priority, with preserving
      natural orders as much as possible.
    * document on reshaping added, but need improvement.
  * (std) additional argument on find_first.

Revision 1.05.4 / 2022-10-26
============================

  * (chak) [critical] default ascii format modified
    * old fortran may refuse es0.m format (0 width)
  * (chak) [SEVERE] coordinate ordering may fail at explicit ordering

Revision 1.05.3 / 2022-10-25
============================

  * Version 1.05.3 yet alpha
  * Improve automatic coordinate matching
    * Fix bugs at matching with slicing, to tweak wrong coordinates
    * Use topological sorting to detect coordinate priorities.
  * (chak) -N flag introduced to control null-coordinate parsing
  * [FATAL] opposite BIN operation.
  * [FATAL] predefined constants not defined as expected.

Revision 1.05.2 / 2022-10-24
============================

  * Version 1.05.2, with some improvement, still alpha.
  * (chak) [CRITICAL] modify default MISS to follow the legacy magic number
  * (chak) ascii/binary input/output hacked
  * (chak) some operation introduced and restructured
  * (chak) header edit level introduced
  * (chak) infix notation is additionally recorded in header
  * (div) exclude div subdirectory to build for release.
  * (nio) more arguments for get_default_header().

Revision 1.05.1 / 2022-10-19
============================

  * Version 1.05.1, to fix chak (alpha version)
  * various bug fixes on chak
  * [FATAL] skip deallocation on in-house operation
  * [FATAL] avoid buffer reuse even unary operation
  * [CRITICAL] correct binary iteration to search free buffer
  * queue/stack structure improved

Revision 1.05.0 / 2022-10-17
============================

  * Version 1.05.0, to publish chak (alpha version).
  * various bug fixes to publish new command chak.
    (ppp) [severe] some bugs fixed around communication.
    (cal) [critical] correct cal::CALNDR arguments for MIROC with-t.
    (emu) [severe] skip message for unbound units.
  * note about ifort -heap-arrays option.
  * (nio) nio_nctcdf introduced.  nio_division is reserved.
  * (nio,nng) [IMPORTANT] nng renamed into nio.
  * (std) std_htb implemented for hash-table management, used in ppp.

Revision 1.03.1 / 2022-04-22
============================

  * [FATAL] autorevision should be ignored when not on git.

Revision 1.03.0 / 2022-04-14
============================

  * various bug fixes to export to MIROC.
  * (ppp) affils, instead of dstr for init_comms argument.
  * (ppp) ppp_amng introduced.
  * (nng) nng_read_header_once implemented.
  * (nng) [FATAL] record type reset before write.
  * (jmz) jmznml.py installed.
  * introduce switching sources, to install in datadir.
  * autorevision target introduced.

Revision 1.02.0 / 2022-02-16
============================

  * New upstream release.
  * HAVE_* macros are renamed to HAVE_FORTRAN_*
  * (ppp) parallel processing procedures, to replace xmcomm/xmking in
    MIROC.
  * (emu) emulate miroc utility
  * (std/env) [important] on-demand checker introduced.
  * (std/mwe) MPI group procedures
  * (std/sus) replaces (original) nng_io.
  * various bug fixes
  * copyrights updated (partially)

Revision 1.01.0 / 2021-12-07
============================

  * Alpha release to provide URT-format trials
  * (jmz) sample utilities to build with TOUZA library
  * (nng) n-n-g is not gtool
  * (trp) trapiche, real/integer arrays compression
  * (cal) restructured (except for miroc/jcup/ils/matsiro/coco interfaces)
  * pkgconf
  * clean common procedures (init/diag/finalize)
  * various bug fixes

Revision 1.00.4 / 2021-03-24
============================

  * (cal) adjustment for ils, matsiro
  * (cal) independent from TOUZA_Std functions (but variables)

Revision 1.00.3 / 2021-03-06
============================

  * (std) new_unit_nn () is now deprecated.
  * (std) new_unit_temp introduced.
  * (std) integer kinds introduced.
  * (std) real property checkers introduced.
  * (cal) TOUZA/Std initialization disabled.
  * (std) MPI initialized/finalized checks introduced.
  * (cal) coco module transformation.

Revision 1.00.2 / 2021-02-16
============================

  * (cal) coco compatible interfaces introduced.
  * (cal) inim argument added to control TOUZA/Std initialization.
  * (std/env) byte-order diagnostics implemented.
  * (std/arg) [CRITICAL] the very first argument was skipped.

Revision 1.00.1 / 2021-02-03
============================

  * (std) [Critical] syntax error when iso_fortran_env disabled.
  * (cal) [critical] calendar string parser/formatter improved.

Revision 1.00 / 2021-01-26
==========================

  * [CRITICAL] auto-mode treatment modified, following latest ucaln.F.
  * [CRITICAL] miroc test(8) now ignore CCC2YH test.
  * introduce FC_INCLUDE_* definition to find subpackage headers.
  * insert AM_CPPFLAGS definition to find touza.h.
  * (build) bug fixed in Makefiles.

Revision 0.99.9 / 2021-01-26
============================

  * [IMPORTANT] standardized design for common procedures.
  * touza batch with module switches.

Revision 0.99.5 / 2021-01-22
============================

  * [CRITICAL] (m4c) at_ prefix replaced with mt_.
  * (std/arg) get_option_*a introduced (to parse array).
  * (std/utl) Implement case conversion subroutines.

Revision 0.99.4 / 2021-01-20
============================

  * autoconf macros (m4c/at_*) installation.

Revision 0.99.3 / 2021-01-19
============================

  * (std/env) record-length function and variables.

Revision 0.99.2 / 2021-01-16
============================

  * (std/arg) additional argument functions introduced.
  * (std/arg) [important] get_args renamed into get_arg.

Revision 0.99.1 / 2021-01-14
============================

  * (std) stderr unit introduced.
  * elemental function switch.
  * makeshift --fcincs argument
  * several minor issues

Revision 0.99 / 2021-01-12
==========================

  * library name transformation introduced
  * (cal) [important] interfaces (as external procedure) introduced.
  * source cleaning (remove obsolete, etc).

Revision 0.98.1 / 2021-01-08
============================

  * Import upstream.
  * Description of installation updated.
  * Include std and cal only to distribution.
  * Module names updated.
  * Copyright notices.

Revision 0.98 / 2021-01-07
==========================

  * Release 0.98 (std cal).
  * Discard git submodule design.

Revision 0.97 / 2020-06-06
==========================

  * (cal) [important] TOUZA/std dependencies reduced.
  * (cal) sample interfaces of matsiro and ils.

Revision 0.91 / 2020-06-13
==========================

  * Update submodules, with touza/std 0.999; touza/cal 0.98
  * Import touza/emu 0.2.

Revision 0.9 / 2020-06-10
=========================

  * Initial release beta, with touza/std and touza/cal.

<!---
  Local Variables:
  mode: markdown
  End:
-->
